<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="error.pirate.backend.workOrder.query.mapper.WorkOrderMapper">

    <!-- 작업지시서 목록
            : 데이터가 많아지면 group_concat과 group by로 하는 것이 서브쿼리보다 효율이 좋아서 수정 예정 -->
    <select id="readWorkOrderList" resultType="error.pirate.backend.workOrder.query.dto.WorkOrderListDTO">
        SELECT wo.work_order_seq
             , wo.work_order_name
             , w.warehouse_seq
             , w.warehouse_name
             , wo.work_order_indicated_date
             , wo.work_order_status
             , (SELECT GROUP_CONCAT(i.item_name SEPARATOR ', ')
                  FROM tb_item i
                 WHERE i.item_seq = wo.item_seq
                )   AS item_name
          FROM tb_work_order wo
          LEFT JOIN tb_warehouse w ON wo.warehouse_seq = w.warehouse_seq
         WHERE wo.work_order_status NOT IN ('DELETE')
        <!--작업상태 필터링-->
        <if test="statusList != null and !statusList.isEmpty()">
            AND wo.work_order_status IN
            <foreach item="status" collection="statusList" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        <!--생산창고 이름 필터링 -->
        <if test="filter.warehouseName != null">
            AND warehouse_name like concat('%', #{filter.warehouseName}, '%')
        </if>
        <!-- 작업지시일 검색 필터링 -->
        <if test="startDateTime != null">
            <![CDATA[
                AND work_order_indicated_date >= #{startDateTime}
                ]]>
        </if>
        <if test="EndDateTime != null">
            <![CDATA[
                AND work_order_indicated_date <= #{EndDateTime}
                ]]>
        </if>
        ORDER BY wo.work_order_indicated_date DESC
               , wo.work_order_name
        LIMIT #{filter.size} OFFSET #{offset}
    </select>

    <!--  작업지시서 목록 개수  -->
    <select id="readWorkOrderListCount" resultType="long">
        SELECT COUNT(*)
          FROM tb_work_order wo
          LEFT JOIN tb_warehouse w ON wo.warehouse_seq = w.warehouse_seq
         WHERE wo.work_order_status NOT IN ('DELETE')
        <if test="statusList != null and !statusList.isEmpty()">
            AND wo.work_order_status IN
            <foreach item="status" collection="statusList" open="(" separator="," close=")">
                #{status}
            </foreach>
        </if>
        <if test="filter.warehouseName != null">
            AND warehouse_name like concat('%', #{filter.warehouseName}, '%')
        </if>
        <if test="filter.startDate != null">
            <![CDATA[
                AND work_order_indicated_date >= #{filter.startDate}
                ]]>
        </if>
        <if test="filter.endDate != null">
            <![CDATA[
                AND work_order_indicated_date <= #{filter.endDate}
                ]]>
        </if>
    </select>

    <!-- 작업지시서 상세조회 -->
    <select id="readWorkOrder" resultType="error.pirate.backend.workOrder.query.dto.WorkOrderDetailDTO">
        SELECT wo.work_order_seq
             , wo.work_order_name
             , w.warehouse_seq
             , w.warehouse_name
             , wo.work_order_indicated_date
             , wo.work_order_status
             , wo.work_order_indicated_quantity
             , wo.work_order_price
             , u.user_name
             , c.client_name
             , wo.work_order_reg_date
             , wo.work_order_mod_date
             , wo.work_order_end_date
             , wo.work_order_due_date
             , wo.work_order_work_quantity
             , wo.work_order_note
          FROM tb_work_order wo
          JOIN tb_warehouse w ON wo.warehouse_seq = w.warehouse_seq
          JOIN tb_client c ON wo.client_seq = c.client_seq
          JOIN tb_user u ON wo.user_seq = u.user_seq
          JOIN tb_sales_order so ON wo.sales_order_seq = so.sales_order_seq
         WHERE wo.work_order_seq = #{workOrderSeq}
    </select>

    <!-- 작업지시서 상세 품목조회 -->
    <select id="readItemByWorkOrderSeq" resultType="error.pirate.backend.workOrder.query.dto.WorkOrderItemDTO">
        SELECT i.item_seq
             , i.item_name
             , i.item_image_url
             , i.item_price
             , iu.item_unit_title
             , i.item_division
             , i.item_note
          FROM tb_work_order wo
          JOIN tb_item i ON wo.item_seq = i.item_seq
          JOIN tb_item_unit iu ON i.item_unit_seq = iu.item_unit_seq
         WHERE wo.work_order_seq = #{workOrderSeq}
    </select>

    <!-- 작업지시서 현황조회 -->
    <select id="readWorkOrderSituations" resultType="error.pirate.backend.workOrder.query.dto.WorkOrderSituationDTO">
        SELECT i.item_name
             , c.client_name
             , wo.work_order_seq
             , wo.work_order_name
             , w.warehouse_name
             , wo.work_order_indicated_quantity
             , wo.work_order_indicated_date
             , wo.work_order_due_date
          FROM tb_work_order wo
          LEFT JOIN tb_item i ON wo.item_seq = i.item_seq
          LEFT JOIN tb_client c ON wo.client_seq = c.client_seq
          LEFT JOIN tb_warehouse w ON w.warehouse_seq = wo.warehouse_seq
         WHERE wo.work_order_status NOT IN ('DELETE')
        <!-- 작업지시일 검색 필터링 -->
        <if test="startDate != null">
            <![CDATA[
                AND wo.work_order_indicated_date >= #{startDate}
                ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[
                AND wo.work_order_indicated_date <= #{endDate}
                ]]>
        </if>
        <!-- 거래처명 필터링 -->
        <if test="clientName != null">
            AND c.client_name LIKE CONCAT('%', #{clientName}, '%')
        </if>
        <!-- 생산창고 필터링 -->
        <if test="warehouseName != null">
            AND w.warehouse_name LIKE CONCAT('%', #{warehouseName}, '%')
        </if>
        ORDER BY wo.work_order_indicated_date
    </select>

    <!-- 전표 조회 -->
    <select id="readWorkOrderSlip" resultType="error.pirate.backend.workOrder.query.dto.WorkOrderSlipDTO">
        SELECT wo.work_order_seq
             , wo.work_order_name
             , wo.work_order_reg_date
             , wo.work_order_mod_date
             , wo.work_order_indicated_date
             , wo.work_order_due_date
             , c.client_name
             , u.user_name
             , w.warehouse_name
             , i.item_name AS parent_item_name
             , wo.work_order_indicated_quantity
          FROM tb_work_order wo
          JOIN tb_client c ON wo.client_seq = c.client_seq
          JOIN tb_user u ON wo.user_seq = u.user_seq
          JOIN tb_warehouse w ON wo.warehouse_seq = w.warehouse_seq
          JOIN order_bridge.tb_item i on wo.item_seq = i.item_seq
         WHERE wo.work_order_seq = #{workOrderSeq}
    </select>

    <!-- 전표 품목조회 -->
    <select id="readWorkOrderSlipItemByWorkOrderSeq" resultType="error.pirate.backend.workOrder.query.dto.WorkOrderSlipItemDTO">
        SELECT wo.item_seq
             , iu.item_unit_title
             , bi.child_item_seq
             , ci.item_name AS child_item_name
             , bi.bom_child_item_quantity AS bom_quantity
          FROM tb_work_order wo
          LEFT JOIN tb_item i ON wo.item_seq = i.item_seq
          LEFT JOIN tb_item_unit iu ON i.item_unit_seq = iu.item_unit_seq
          LEFT JOIN tb_bom_item bi ON i.item_seq = bi.parent_item_seq
          LEFT JOIN tb_item ci ON bi.child_item_seq = ci.item_seq
         WHERE wo.work_order_seq = #{workOrderSeq};
    </select>

</mapper>